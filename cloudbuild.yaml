steps:
  #Criando o container
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/gin-23-1/rede-spoty", "."]

  #Enviando-o ao container registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/gin-23-1/rede-spoty"]

  #Verificando se j치 existe o cluster kubernetes
  - name: "gcr.io/cloud-builders/gcloud"
    id: check-cluster
    args:
      - "container"
      - "clusters"
      - "describe"
      - "$CLOUDSDK_CONTAINER_CLUSTER"
      - "--zone"
      - "$_CLOUDSDK_COMPUTE_ZONE"
    entrypoint: "bash"
    waitFor: ["-"]

  #Se existir, apague-o
  - name: "gcr.io/cloud-builders/gcloud"
    id: delete-cluster
    args:
      - "container"
      - "clusters"
      - "delete"
      - "$CLOUDSDK_CONTAINER_CLUSTER"
      - "--zone"
      - "$_CLOUDSDK_COMPUTE_ZONE"
      - "--quiet"
    entrypoint: "bash"
    waitFor: ["check-cluster"]

  #Recriando-o
  - name: "gcr.io/cloud-builders/gcloud"
    id: create-cluster
    args:
      - "container"
      - "clusters"
      - "create"
      - "$CLOUDSDK_CONTAINER_CLUSTER" # Substitua pelo nome do seu cluster GKE
      - "--zone"
      - "$_CLOUDSDK_COMPUTE_ZONE" # Substitua pela zona onde o cluster ser치 criado
    entrypoint: "bash"
    waitFor: ["delete-cluster"]

  #Criando o Kubernetes Engine para instanciar o container criado
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "container",
        "clusters",
        "create",
        "$CLOUDSDK_CONTAINER_CLUSTER",
        "--zone",
        "$CLOUDSDK_COMPUTE_ZONE",
        "--num-nodes",
        "2",
        "--disk-size",
        "25GB",
      ]

  #Implantando o container criado na instancia Kubernetes
  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "kubernetes.yaml"]

  #Inserindo o repositorio do helm-charts, grafana e prometheus via helm
  - name: "gcr.io/cloud-builders/helm"
    args: ["repo", "add", "stable", "https://charts.helm.sh/stable"]

  - name: "gcr.io/cloud-builders/helm"
    args:
      [
        "repo",
        "add",
        "prometheus-community",
        "https://prometheus-community.github.io/helm-charts",
      ]

  - name: "gcr.io/cloud-builders/helm"
    args: ["repo", "add", "grafana", "https://grafana.github.io/helm-charts"]

  - name: "gcr.io/cloud-builders/helm"
    args: ["repo", "update"]

  #Instalando o prometheus, alert manager e grafana (OBS: j치 existe o arquivo .yaml na 치rea do projeto)
  - name: "gcr.io/cloud-builders/helm"
    args:
      [
        "install",
        "prometheus",
        "prometheus-community/prometheus",
        "-f",
        "prometheus-values.yaml",
      ]

  - name: "gcr.io/cloud-builders/helm"
    args:
      [
        "install",
        "alertmanager",
        "prometheus-community/alertmanager",
        "-f",
        "alertmanager-values.yaml",
      ]

  - name: "gcr.io/cloud-builders/helm"
    args: ["install", "grafana", "grafana/grafana"]

    #Deployando o container criado - antigo
  #- name: 'gcr.io/cloud-builders/gcloud'
  # args:
  #  - 'run'
  #  - 'deploy'
  #  - 'rede-spoty'
  #  - '--image=gcr.io/gin-23-1/rede-spoty:latest'
  #  - '--platform=managed'
  #  - '--region=us-central1'
  #  - '--allow-unauthenticated'

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  #_CLOUDSDK_COMPUTE_REGION: us-central1
  _CLOUDSDK_COMPUTE_ZONE: us-central1
  _CLOUDSDK_CONTAINER_CLUSTER: cluster-rede-spoty
